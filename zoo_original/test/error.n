(*====================================================================*)
(*  You-il Kim, The LET Project, KAIST                                *)
(*--------------------------------------------------------------------*)
(*  Copyright(c) 2001 Research On Program Analysis System             *)
(*  National Creative Research Initiative Center                      *)
(*  Korea Advanced Institute of Science & Technology                  *)
(*  http://ropas.kaist.ac.kr                                          *)
(*--------------------------------------------------------------------*)
(*  All rights reserved. This file is distributed under the terms of  *)
(*  an Open Source License.                                           *)
(*====================================================================*)


signature ErrorInfo =
sig
    type error = Invalid_setexp
               | Invalid_latexp
               | Invalid_exp
               | Invalid_pat
               | Invalid_ty
               | Invalid_id
               | Invalid_longid
               | Invalid_cargexp
               | Invalid_cvarexp
               | Invalid_mrule
               | Invalid_mpat

    exception Error of error * Region.region

    val report_error: (error * Region.region) -> unit 
end

structure ErrorInfo: ErrorInfo =
struct
    type error = Invalid_setexp
               | Invalid_latexp
               | Invalid_exp
               | Invalid_pat
               | Invalid_ty
               | Invalid_id
               | Invalid_longid
               | Invalid_cargexp
               | Invalid_cvarexp
               | Invalid_mrule
               | Invalid_mpat

    exception Error of error * Region.region

    val get_error_msg = fn
        (Invalid_setexp)  => "올바른 집합 표현이 아닙니다."
      | (Invalid_latexp)  => "올바른 래티스 표현이 아닙니다."
      | (Invalid_exp)     => "올바른 분석 식이 아닙니다."
      | (Invalid_pat)     => "올바른 패턴 식이 아닙니다."
      | (Invalid_ty)      => "올바른 타입 식이 아닙니다."
      | (Invalid_id)      => "id가 필요합니다."
      | (Invalid_longid)  => "longid가 필요합니다."
      | (Invalid_cargexp) => "cargexp가 필요합니다."
      | (Invalid_cvarexp) => "cvarexp가 필요합니다."
      | (Invalid_mrule)   => "'패턴 => 식' 형태가 필요합니다."
      | (Invalid_mpat)    => "'패턴 => 패턴' 형태가 필요합니다."

    fun report_error (error_type, error_region) = 
        (
            Region.pp_region error_region;
            print_string (": "^(get_error_msg error_type));
            print_newline ()
        )

end

